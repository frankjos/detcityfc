<?php
/**
 * @category    Fishpig
 * @package     Fishpig_Wordpress
 * @license     http://fishpig.co.uk/license.txt
 * @author      Ben Tideswell <help@fishpig.co.uk>
 */
?>
<form id="respond" method="post" action="<?php echo $this->getCommentFormAction() ?>">
	<div class="display-none">
		<input type="hidden" name="comment_post_ID" value="<?php echo $this->getPostId() ?>"/>
		<input type="hidden" name="comment_parent" value="0"/>
	</div>
	<div class="fieldset">
		<div class="legend"><?php echo $this->__('Comments') ?></div>
		<?php if ($this->customerMustLogin()): ?>	
			<p><?php echo $this->__('You must be logged in to post a comment.') ?></p>
			<p><button class="button btn-login" type="button" onclick="setLocation('<?php echo $this->getLoginLink() ?>');"><span><span><?php echo $this->__('Login') ?></span></span></button></p>
		<?php else: ?>
			<ul class="form-list">
				<?php if (!$this->isCustomerLoggedIn()): ?>
					<li class="fields">
						<div class="field">
							<label for="author" class="required"><?php echo $this->__('Name') ?> <em>*</em></label>
							<div class="input-box">
								<input type="text" id="author" name="author" class="input-text required-entry" value=""/>
							</div>
						</div>
						<div class="field">
							<label for="email" class="required"><?php echo $this->__('Email') ?> <em>*</em></label>
							<div class="input-box">
								<input type="text" id="email" name="email" class="input-text required-entry validate-email" value=""/>
							</div>
						</div>
					</li>
				<?php endif; ?>
				<li>
					<label for="url"><?php echo $this->__('Website') ?></label>
					<div class="input-box">
						<input type="text" id="url" name="url" class="input-text" value=""/>
					</div>
				</li>
				<li class="wide">
					<label for="comment" class="required"><?php echo $this->__('Comment') ?> <em>*</em></label>
					<div class="input-box">
						<textarea id="comment" name="comment" rows="8" cols="45" class="required-entry"></textarea>
					</div>
				</li>
				<?php if ($this->getCommentReplyNotificationEnabled()): ?>
					<li class="control">
						<input type="checkbox" class="checkbox" title="<?php echo $this->__('Receive Reply Notifications') ?>" value="1" id="notifications" name="extra[comment_mail_notify]"<?php if ($this->getCommentReplyNotificationOptInChecked()): ?> checked="checked"<?php endif; ?>> <label for="notifications"><?php echo $this->__('Notify me of follow-up comments via e-mail') ?></label>
					</li>
				<?php endif; ?>
			</ul>
		<?php endif; ?>
	</div>
	<?php if (!$this->customerMustLogin()): ?>	
	<div class="buttons-set">
		<button type="submit" name="submit"  class="button" value="Post your comment" id="post-the-comment">
			<span><span><?php echo $this->__('Leave a comment') ?></span></span>
		</button>
		<span class="please-wait" id="respond-please-wait" style="display:none;">
			<img src="<?php echo $this->getSkinUrl('images/opc-ajax-loader.gif') ?>" alt="<?php echo $this->__('Loading next step...') ?>" title="<?php echo $this->__('Loading next step...') ?>" class="v-middle" /> <?php echo $this->__('Submitting comment') ?>
		</span>
	</div>
	<script type="text/javascript">
	//<![CDATA[
	
		var wpCommentForm = Class.create({
			initialize: function(formId){
				this.form = $(formId);
				this.loading = $(formId + '-please-wait');
				this.validator  = new Validation(this.form);
				this.form.observe('submit', this.submit.bindAsEventListener(this));
			},
			submit: function(event) {
				Event.stop(event);
				if(this.validator && this.validator.validate()){
					this._submitForm();
				}
			},
			_submitForm: function() {
				this._showLoading();

				this.form.request({
					parameters: this.form.serialize(),
					onComplete: function(response){
						var resp = response.responseText;

						if (resp.indexOf('id="error-page"') > 0) {
							var reg = new RegExp('<body[^>]{0,}>(.*)<\/body>', 'i');
							var matches = resp.replace(/(\r\n|\n|\r)/gm,"").match(reg);

							if (matches) {
								var msg = matches[1].replace(/(<([^>]+)>)/ig,"");
								
								if (msg.length < 500) {
									this.onCommentFail(msg);
								}
								else {
									this.onCommentSuccess(response);
								}
							}
							else {
							alert('2');
								this.onCommentFail("<?php echo $this->__('An unknown error occurred.') ?>");
							}
						}
						else {
							this.onCommentSuccess(response);
						}
						
						this._hideLoading();
					}.bind(this)
				});
			},
			onCommentSuccess: function(response) {
				window.location.href='<?php echo $this->getPost()->getPermalink() ?>?c=q';
			},
			onCommentFail: function(msg) {
				alert(msg);
			},
			_showLoading: function() {
				this.loading.setStyle({'display': 'block'});
			},
			_hideLoading: function() {
				this.loading.setStyle({'display': 'none'});				
			}
		});
	
		var commentForm = new wpCommentForm('respond');
	//]]>
	</script>
	<?php endif; ?>
</form>